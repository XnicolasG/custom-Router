import{jsx as _jsx}from"react/jsx-runtime";import{Children,useEffect,useState}from"react";import{EVENTS}from"../utils/const";import{match}from"path-to-regexp";import{getCurrentPath}from"../utils/getCurrentPath";export const Router=({children,routes=[],defaultComponent:DefaultComponent=()=>/*#__PURE__*/_jsx("h1",{children:"404"})})=>{console.log(children);const[currentPath,setCurrentPath]=useState(getCurrentPath());useEffect(()=>{const onLocationChange=()=>{setCurrentPath(getCurrentPath())};window.addEventListener(EVENTS.PushState,onLocationChange);window.addEventListener(EVENTS.PopState,onLocationChange);return()=>{window.removeEventListener(EVENTS.PushState,onLocationChange);window.removeEventListener(EVENTS.PopState,onLocationChange)}},[]);let routeParams={};const routesFromChildren=Children.map(children,({props,type})=>{const{name}=type;const isRoute=name==="Route";return isRoute?props:null});console.log("routesFromChildren:",routesFromChildren);const RoutesToUse=routes.concat(routesFromChildren).filter(Boolean);const Page=RoutesToUse.find(({path})=>{if(path===currentPath)return true;const matcherUrl=match(path,{decode:decodeURIComponent});const matched=matcherUrl(currentPath);if(!matched)return false;routeParams=matched.params;return true})?.component;return Page?/*#__PURE__*/_jsx(Page,{routeParams:routeParams}):/*#__PURE__*/_jsx(DefaultComponent,{routeParams:routeParams})};